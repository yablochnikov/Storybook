"use strict";(self.webpackChunkreact_material_lib=self.webpackChunkreact_material_lib||[]).push([[600],{"./src/components/BasicTable/BasicTable.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultBasicTable:function(){return DefaultBasicTable},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return BasicTable_stories}});var _DefaultBasicTable$pa,_DefaultBasicTable$pa2,_DefaultBasicTable$pa3,objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),material_react_table_esm=__webpack_require__("./node_modules/material-react-table/dist/esm/material-react-table.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["columns"],BasicTable=function BasicTable(_ref){var columns=_ref.columns,props=(0,objectWithoutProperties.Z)(_ref,_excluded),columnsData=(0,react.useMemo)((function(){return columns}),[columns]);return(0,jsx_runtime.jsx)(material_react_table_esm.ZP,(0,objectSpread2.Z)({columns:columnsData},props))},BasicTable_BasicTable=BasicTable;try{BasicTable.displayName="BasicTable",BasicTable.__docgenInfo={description:"",displayName:"BasicTable",props:{renderFallbackValue:{defaultValue:null,description:"",name:"renderFallbackValue",required:!1,type:{name:"any"}},debugAll:{defaultValue:null,description:"",name:"debugAll",required:!1,type:{name:"boolean"}},debugTable:{defaultValue:null,description:"",name:"debugTable",required:!1,type:{name:"boolean"}},debugHeaders:{defaultValue:null,description:"",name:"debugHeaders",required:!1,type:{name:"boolean"}},debugColumns:{defaultValue:null,description:"",name:"debugColumns",required:!1,type:{name:"boolean"}},debugRows:{defaultValue:null,description:"",name:"debugRows",required:!1,type:{name:"boolean"}},autoResetAll:{defaultValue:null,description:"",name:"autoResetAll",required:!1,type:{name:"boolean"}},mergeOptions:{defaultValue:null,description:"",name:"mergeOptions",required:!1,type:{name:"(defaultOptions: TableOptions<{}>, options: Partial<TableOptions<{}>>) => TableOptions<{}>"}},meta:{defaultValue:null,description:"",name:"meta",required:!1,type:{name:"TableMeta<{}>"}},getCoreRowModel:{defaultValue:null,description:"",name:"getCoreRowModel",required:!1,type:{name:"(table: Table<any>) => () => RowModel<any>"}},getSubRows:{defaultValue:null,description:"",name:"getSubRows",required:!1,type:{name:"(originalRow: {}, index: number) => {}[]"}},onColumnVisibilityChange:{defaultValue:null,description:"",name:"onColumnVisibilityChange",required:!1,type:{name:"OnChangeFn<VisibilityState>"}},enableHiding:{defaultValue:null,description:"",name:"enableHiding",required:!1,type:{name:"boolean"}},onColumnOrderChange:{defaultValue:null,description:"",name:"onColumnOrderChange",required:!1,type:{name:"OnChangeFn<ColumnOrderState>"}},onColumnPinningChange:{defaultValue:null,description:"",name:"onColumnPinningChange",required:!1,type:{name:"OnChangeFn<ColumnPinningState>"}},enablePinning:{defaultValue:null,description:"",name:"enablePinning",required:!1,type:{name:"boolean"}},enableFilters:{defaultValue:null,description:"",name:"enableFilters",required:!1,type:{name:"boolean"}},manualFiltering:{defaultValue:null,description:"",name:"manualFiltering",required:!1,type:{name:"boolean"}},filterFromLeafRows:{defaultValue:null,description:"",name:"filterFromLeafRows",required:!1,type:{name:"boolean"}},maxLeafRowFilterDepth:{defaultValue:null,description:"",name:"maxLeafRowFilterDepth",required:!1,type:{name:"number"}},getFilteredRowModel:{defaultValue:null,description:"",name:"getFilteredRowModel",required:!1,type:{name:"(table: Table<any>) => () => RowModel<any>"}},onColumnFiltersChange:{defaultValue:null,description:"",name:"onColumnFiltersChange",required:!1,type:{name:"OnChangeFn<ColumnFiltersState>"}},enableColumnFilters:{defaultValue:null,description:"",name:"enableColumnFilters",required:!1,type:{name:"boolean"}},onGlobalFilterChange:{defaultValue:null,description:"",name:"onGlobalFilterChange",required:!1,type:{name:"OnChangeFn<any>"}},enableGlobalFilter:{defaultValue:null,description:"",name:"enableGlobalFilter",required:!1,type:{name:"boolean"}},getColumnCanGlobalFilter:{defaultValue:null,description:"",name:"getColumnCanGlobalFilter",required:!1,type:{name:"(column: Column<{}, unknown>) => boolean"}},getFacetedRowModel:{defaultValue:null,description:"",name:"getFacetedRowModel",required:!1,type:{name:"(table: Table<{}>, columnId: string) => () => RowModel<{}>"}},getFacetedUniqueValues:{defaultValue:null,description:"",name:"getFacetedUniqueValues",required:!1,type:{name:"(table: Table<{}>, columnId: string) => () => Map<any, number>"}},getFacetedMinMaxValues:{defaultValue:null,description:"",name:"getFacetedMinMaxValues",required:!1,type:{name:"(table: Table<{}>, columnId: string) => () => [number, number]"}},filterFns:{defaultValue:null,description:"",name:"filterFns",required:!1,type:{name:"Record<string, FilterFn<any>>"}},manualSorting:{defaultValue:null,description:"",name:"manualSorting",required:!1,type:{name:"boolean"}},onSortingChange:{defaultValue:null,description:"",name:"onSortingChange",required:!1,type:{name:"OnChangeFn<SortingState>"}},enableSorting:{defaultValue:null,description:"",name:"enableSorting",required:!1,type:{name:"boolean"}},enableSortingRemoval:{defaultValue:null,description:"",name:"enableSortingRemoval",required:!1,type:{name:"boolean"}},enableMultiRemove:{defaultValue:null,description:"",name:"enableMultiRemove",required:!1,type:{name:"boolean"}},enableMultiSort:{defaultValue:null,description:"",name:"enableMultiSort",required:!1,type:{name:"boolean"}},sortDescFirst:{defaultValue:null,description:"",name:"sortDescFirst",required:!1,type:{name:"boolean"}},getSortedRowModel:{defaultValue:null,description:"",name:"getSortedRowModel",required:!1,type:{name:"(table: Table<any>) => () => RowModel<any>"}},maxMultiSortColCount:{defaultValue:null,description:"",name:"maxMultiSortColCount",required:!1,type:{name:"number"}},isMultiSortEvent:{defaultValue:null,description:"",name:"isMultiSortEvent",required:!1,type:{name:"(e: unknown) => boolean"}},sortingFns:{defaultValue:null,description:"",name:"sortingFns",required:!1,type:{name:"Record<string, SortingFn<any>>"}},manualGrouping:{defaultValue:null,description:"",name:"manualGrouping",required:!1,type:{name:"boolean"}},onGroupingChange:{defaultValue:null,description:"",name:"onGroupingChange",required:!1,type:{name:"OnChangeFn<GroupingState>"}},enableGrouping:{defaultValue:null,description:"",name:"enableGrouping",required:!1,type:{name:"boolean"}},getGroupedRowModel:{defaultValue:null,description:"",name:"getGroupedRowModel",required:!1,type:{name:"(table: Table<any>) => () => RowModel<any>"}},groupedColumnMode:{defaultValue:null,description:"",name:"groupedColumnMode",required:!1,type:{name:'false | "reorder" | "remove"'}},aggregationFns:{defaultValue:null,description:"",name:"aggregationFns",required:!1,type:{name:"Record<string, AggregationFn<any>>"}},manualExpanding:{defaultValue:null,description:"",name:"manualExpanding",required:!1,type:{name:"boolean"}},onExpandedChange:{defaultValue:null,description:"",name:"onExpandedChange",required:!1,type:{name:"OnChangeFn<ExpandedState>"}},autoResetExpanded:{defaultValue:null,description:"",name:"autoResetExpanded",required:!1,type:{name:"boolean"}},enableExpanding:{defaultValue:null,description:"",name:"enableExpanding",required:!1,type:{name:"boolean"}},getExpandedRowModel:{defaultValue:null,description:"",name:"getExpandedRowModel",required:!1,type:{name:"(table: Table<any>) => () => RowModel<any>"}},getIsRowExpanded:{defaultValue:null,description:"",name:"getIsRowExpanded",required:!1,type:{name:"(row: Row<{}>) => boolean"}},getRowCanExpand:{defaultValue:null,description:"",name:"getRowCanExpand",required:!1,type:{name:"(row: Row<{}>) => boolean"}},paginateExpandedRows:{defaultValue:null,description:"",name:"paginateExpandedRows",required:!1,type:{name:"boolean"}},enableColumnResizing:{defaultValue:null,description:"",name:"enableColumnResizing",required:!1,type:{name:"boolean"}},columnResizeMode:{defaultValue:null,description:"",name:"columnResizeMode",required:!1,type:{name:"ColumnResizeMode"}},onColumnSizingChange:{defaultValue:null,description:"",name:"onColumnSizingChange",required:!1,type:{name:"OnChangeFn<ColumnSizingState>"}},onColumnSizingInfoChange:{defaultValue:null,description:"",name:"onColumnSizingInfoChange",required:!1,type:{name:"OnChangeFn<ColumnSizingInfoState>"}},pageCount:{defaultValue:null,description:"",name:"pageCount",required:!1,type:{name:"number"}},manualPagination:{defaultValue:null,description:"",name:"manualPagination",required:!1,type:{name:"boolean"}},onPaginationChange:{defaultValue:null,description:"",name:"onPaginationChange",required:!1,type:{name:"OnChangeFn<PaginationState>"}},autoResetPageIndex:{defaultValue:null,description:"",name:"autoResetPageIndex",required:!1,type:{name:"boolean"}},getPaginationRowModel:{defaultValue:null,description:"",name:"getPaginationRowModel",required:!1,type:{name:"(table: Table<any>) => () => RowModel<any>"}},enableMultiRowSelection:{defaultValue:null,description:"",name:"enableMultiRowSelection",required:!1,type:{name:"boolean | ((row: Row<{}>) => boolean)"}},enableSubRowSelection:{defaultValue:null,description:"",name:"enableSubRowSelection",required:!1,type:{name:"boolean | ((row: Row<{}>) => boolean)"}},onRowSelectionChange:{defaultValue:null,description:"",name:"onRowSelectionChange",required:!1,type:{name:"OnChangeFn<RowSelectionState>"}},columnFilterModeOptions:{defaultValue:null,description:"",name:"columnFilterModeOptions",required:!1,type:{name:"(string & MRT_FilterOption)[]"}},columns:{defaultValue:null,description:"The columns to display in the table. `accessorKey`s or `accessorFn`s must match keys in the `data` prop.\n\nSee more info on creating columns on the official docs site:\n@link https://www.material-react-table.com/docs/guides/data-columns\n@link https://www.material-react-table.com/docs/guides/display-columns\n\nSee all Columns Options on the official docs site:\n@link https://www.material-react-table.com/docs/api/column-options",name:"columns",required:!0,type:{name:"MRT_ColumnDef<{}>[]"}},data:{defaultValue:null,description:"Pass your data as an array of objects. Objects can theoretically be any shape, but it's best to keep them consistent.\n\nSee the usage guide for more info on creating columns and data:\n@link https://www.material-react-table.com/docs/getting-started/usage",name:"data",required:!0,type:{name:"{}[]"}},defaultColumn:{defaultValue:null,description:"Instead of specifying a bunch of the same options for each column, you can just change an option in the `defaultColumn` prop to change a default option for all columns.",name:"defaultColumn",required:!1,type:{name:"Partial<MRT_ColumnDef<{}>>"}},defaultDisplayColumn:{defaultValue:null,description:"Change the default options for display columns.",name:"defaultDisplayColumn",required:!1,type:{name:"Partial<MRT_ColumnDef<{}>>"}},displayColumnDefOptions:{defaultValue:null,description:"",name:"displayColumnDefOptions",required:!1,type:{name:'Partial<{ "mrt-row-actions": Partial<MRT_ColumnDef<{}>>; "mrt-row-drag": Partial<MRT_ColumnDef<{}>>; "mrt-row-expand": Partial<MRT_ColumnDef<{}>>; "mrt-row-numbers": Partial<...>; "mrt-row-select": Partial<...>; }>'}},editingMode:{defaultValue:null,description:"",name:"editingMode",required:!1,type:{name:'"cell" | "table" | "modal" | "row"'}},enableBottomToolbar:{defaultValue:null,description:"",name:"enableBottomToolbar",required:!1,type:{name:"boolean"}},enableClickToCopy:{defaultValue:null,description:"",name:"enableClickToCopy",required:!1,type:{name:"boolean"}},enableColumnActions:{defaultValue:null,description:"",name:"enableColumnActions",required:!1,type:{name:"boolean"}},enableColumnDragging:{defaultValue:null,description:"",name:"enableColumnDragging",required:!1,type:{name:"boolean"}},enableColumnFilterModes:{defaultValue:null,description:"",name:"enableColumnFilterModes",required:!1,type:{name:"boolean"}},enableColumnOrdering:{defaultValue:null,description:"",name:"enableColumnOrdering",required:!1,type:{name:"boolean"}},enableColumnVirtualization:{defaultValue:null,description:"",name:"enableColumnVirtualization",required:!1,type:{name:"boolean"}},enableDensityToggle:{defaultValue:null,description:"",name:"enableDensityToggle",required:!1,type:{name:"boolean"}},enableEditing:{defaultValue:null,description:"",name:"enableEditing",required:!1,type:{name:"boolean | ((row: { id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; index: number; original: {}; ... 33 more ...; _valuesCache: Record<...>; }) => boolean)"}},enableExpandAll:{defaultValue:null,description:"",name:"enableExpandAll",required:!1,type:{name:"boolean"}},enableFilterMatchHighlighting:{defaultValue:null,description:"",name:"enableFilterMatchHighlighting",required:!1,type:{name:"boolean"}},enableFullScreenToggle:{defaultValue:null,description:"",name:"enableFullScreenToggle",required:!1,type:{name:"boolean"}},enableGlobalFilterModes:{defaultValue:null,description:"",name:"enableGlobalFilterModes",required:!1,type:{name:"boolean"}},enableGlobalFilterRankedResults:{defaultValue:null,description:"",name:"enableGlobalFilterRankedResults",required:!1,type:{name:"boolean"}},enablePagination:{defaultValue:null,description:"",name:"enablePagination",required:!1,type:{name:"boolean"}},enableRowActions:{defaultValue:null,description:"",name:"enableRowActions",required:!1,type:{name:"boolean"}},enableRowDragging:{defaultValue:null,description:"",name:"enableRowDragging",required:!1,type:{name:"boolean"}},enableRowNumbers:{defaultValue:null,description:"",name:"enableRowNumbers",required:!1,type:{name:"boolean"}},enableRowOrdering:{defaultValue:null,description:"",name:"enableRowOrdering",required:!1,type:{name:"boolean"}},enableRowSelection:{defaultValue:null,description:"",name:"enableRowSelection",required:!1,type:{name:"boolean | ((row: { id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; index: number; original: {}; ... 33 more ...; _valuesCache: Record<...>; }) => boolean)"}},enableRowVirtualization:{defaultValue:null,description:"",name:"enableRowVirtualization",required:!1,type:{name:"boolean"}},enableSelectAll:{defaultValue:null,description:"",name:"enableSelectAll",required:!1,type:{name:"boolean"}},enableStickyFooter:{defaultValue:null,description:"",name:"enableStickyFooter",required:!1,type:{name:"boolean"}},enableStickyHeader:{defaultValue:null,description:"",name:"enableStickyHeader",required:!1,type:{name:"boolean"}},enableTableFooter:{defaultValue:null,description:"",name:"enableTableFooter",required:!1,type:{name:"boolean"}},enableTableHead:{defaultValue:null,description:"",name:"enableTableHead",required:!1,type:{name:"boolean"}},enableToolbarInternalActions:{defaultValue:null,description:"",name:"enableToolbarInternalActions",required:!1,type:{name:"boolean"}},enableTopToolbar:{defaultValue:null,description:"",name:"enableTopToolbar",required:!1,type:{name:"boolean"}},expandRowsFn:{defaultValue:null,description:"",name:"expandRowsFn",required:!1,type:{name:"(dataRow: {}) => {}[]"}},getRowId:{defaultValue:null,description:"",name:"getRowId",required:!1,type:{name:"(originalRow: {}, index: number, parentRow: { id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; ... 35 more ...; _valuesCache: Record<...>; }) => string"}},globalFilterFn:{defaultValue:null,description:"",name:"globalFilterFn",required:!1,type:{name:"MRT_FilterOption"}},globalFilterModeOptions:{defaultValue:null,description:"",name:"globalFilterModeOptions",required:!1,type:{name:"MRT_FilterOption[]"}},icons:{defaultValue:null,description:"",name:"icons",required:!1,type:{name:"Partial<MRT_Icons>"}},initialState:{defaultValue:null,description:"",name:"initialState",required:!1,type:{name:"Partial<{ columnVisibility: VisibilityState; columnOrder: ColumnOrderState; columnPinning: ColumnPinningState; columnFilters: ColumnFiltersState; ... 24 more ...; showToolbarDropZone: boolean; }>"}},layoutMode:{defaultValue:null,description:"Changes which kind of CSS layout is used to render the table. `semantic` uses default semantic HTML elements, while `grid` adds CSS grid and flexbox styles",name:"layoutMode",required:!1,type:{name:'"grid" | "semantic"'}},localization:{defaultValue:null,description:"Pass in either a locale imported from `material-react-table/locales/*` or a custom locale object.\n\nSee the localization (i18n) guide for more info:\n@link https://www.material-react-table.com/docs/guides/localization",name:"localization",required:!1,type:{name:"Partial<MRT_Localization>"}},memoMode:{defaultValue:null,description:"Memoize cells, rows, or the entire table body to potentially improve render performance.\n@warning This will break some dynamic rendering features. See the memoization guide for more info:\n@link https://www.material-react-table.com/docs/guides/memoize-components",name:"memoMode",required:!1,type:{name:'"rows" | "cells" | "table-body"'}},muiBottomToolbarProps:{defaultValue:null,description:"",name:"muiBottomToolbarProps",required:!1,type:{name:'ToolbarProps<"div", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ToolbarProps<...>)'}},muiExpandAllButtonProps:{defaultValue:null,description:"",name:"muiExpandAllButtonProps",required:!1,type:{name:'IconButtonProps<"button", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => IconButtonProps<...>)'}},muiExpandButtonProps:{defaultValue:null,description:"",name:"muiExpandButtonProps",required:!1,type:{name:'IconButtonProps<"button", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; row: { ...; }; }) => IconButtonProps<...>)'}},muiLinearProgressProps:{defaultValue:null,description:"",name:"muiLinearProgressProps",required:!1,type:{name:"LinearProgressProps | ((props: { isTopToolbar: boolean; table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; ... 143 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => LinearProgressProps)"}},muiSearchTextFieldProps:{defaultValue:null,description:"",name:"muiSearchTextFieldProps",required:!1,type:{name:"TextFieldProps | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => TextFieldProps)"}},muiSelectAllCheckboxProps:{defaultValue:null,description:"",name:"muiSelectAllCheckboxProps",required:!1,type:{name:"CheckboxProps | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => CheckboxProps)"}},muiSelectCheckboxProps:{defaultValue:null,description:"",name:"muiSelectCheckboxProps",required:!1,type:{name:"CheckboxProps | RadioProps | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; row: { ...; }; }) => CheckboxProps | RadioProps)"}},muiTableBodyCellCopyButtonProps:{defaultValue:null,description:"",name:"muiTableBodyCellCopyButtonProps",required:!1,type:{name:'ButtonProps<"button", {}> | ((props: { cell: { id: string; getIsGrouped: () => boolean; getValue: Getter<unknown>; renderValue: Getter<unknown>; getContext: () => CellContext<{}, unknown>; getIsPlaceholder: () => boolean; getIsAggregated: () => boolean; column: MRT_Column<...>; row: { ...; }; }; column: MRT_Column<....'}},muiTableBodyCellEditTextFieldProps:{defaultValue:null,description:"",name:"muiTableBodyCellEditTextFieldProps",required:!1,type:{name:"TextFieldProps | ((props: { cell: { id: string; getIsGrouped: () => boolean; getValue: Getter<unknown>; renderValue: Getter<unknown>; getContext: () => CellContext<{}, unknown>; getIsPlaceholder: () => boolean; getIsAggregated: () => boolean; column: MRT_Column<...>; row: { ...; }; }; column: MRT_Column<...>; row: {..."}},muiTableBodyCellProps:{defaultValue:null,description:"",name:"muiTableBodyCellProps",required:!1,type:{name:"TableCellProps | ((props: { cell: { id: string; getIsGrouped: () => boolean; getValue: Getter<unknown>; renderValue: Getter<unknown>; getContext: () => CellContext<{}, unknown>; getIsPlaceholder: () => boolean; getIsAggregated: () => boolean; column: MRT_Column<...>; row: { ...; }; }; column: MRT_Column<...>; row: {..."}},muiTableBodyCellSkeletonProps:{defaultValue:null,description:"",name:"muiTableBodyCellSkeletonProps",required:!1,type:{name:'SkeletonProps<"span", {}> | ((props: { cell: { id: string; getIsGrouped: () => boolean; getValue: Getter<unknown>; renderValue: Getter<unknown>; getContext: () => CellContext<{}, unknown>; getIsPlaceholder: () => boolean; getIsAggregated: () => boolean; column: MRT_Column<...>; row: { ...; }; }; column: MRT_Column<....'}},muiTableBodyProps:{defaultValue:null,description:"",name:"muiTableBodyProps",required:!1,type:{name:'TableBodyProps<"tbody", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => TableBodyProps<...>)'}},muiTableBodyRowDragHandleProps:{defaultValue:null,description:"",name:"muiTableBodyRowDragHandleProps",required:!1,type:{name:'IconButtonProps<"button", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; row: { ...; }; }) => IconButtonProps<...>)'}},muiTableBodyRowProps:{defaultValue:null,description:"",name:"muiTableBodyRowProps",required:!1,type:{name:'TableRowProps<"tr", {}> | ((props: { isDetailPanel?: boolean; row: { id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; ... 37 more ...; _valuesCache: Record<...>; }; staticRowIndex: number; table: { ...; }; }) => TableRowProps<...>)'}},muiTableContainerProps:{defaultValue:null,description:"",name:"muiTableContainerProps",required:!1,type:{name:'TableContainerProps<"div", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => TableContainerProps<...>)'}},muiTableDetailPanelProps:{defaultValue:null,description:"",name:"muiTableDetailPanelProps",required:!1,type:{name:"TableCellProps | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; row: { ...; }; }) => TableCellProps)"}},muiTableFooterCellProps:{defaultValue:null,description:"",name:"muiTableFooterCellProps",required:!1,type:{name:"TableCellProps | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; column: MRT_Column<...>; }) => TableCellProps)"}},muiTableFooterProps:{defaultValue:null,description:"",name:"muiTableFooterProps",required:!1,type:{name:'TableFooterProps<"tfoot", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => TableFooterProps<...>)'}},muiTableFooterRowProps:{defaultValue:null,description:"",name:"muiTableFooterRowProps",required:!1,type:{name:'TableRowProps<"tr", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; footerGroup: { ...; }; }) => TableRowProps<...>)'}},muiTableHeadCellColumnActionsButtonProps:{defaultValue:null,description:"",name:"muiTableHeadCellColumnActionsButtonProps",required:!1,type:{name:'IconButtonProps<"button", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; column: MRT_Column<...>; }) => IconButtonProps<...>)'}},muiTableHeadCellDragHandleProps:{defaultValue:null,description:"",name:"muiTableHeadCellDragHandleProps",required:!1,type:{name:'IconButtonProps<"button", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; column: MRT_Column<...>; }) => IconButtonProps<...>)'}},muiTableHeadCellFilterCheckboxProps:{defaultValue:null,description:"",name:"muiTableHeadCellFilterCheckboxProps",required:!1,type:{name:"CheckboxProps | ((props: { column: MRT_Column<{}>; table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; ... 143 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => CheckboxProps)"}},muiTableHeadCellFilterTextFieldProps:{defaultValue:null,description:"",name:"muiTableHeadCellFilterTextFieldProps",required:!1,type:{name:"TextFieldProps | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; column: MRT_Column<...>; rangeFilterIndex?: number; }) => TextFieldProps)"}},muiTableHeadCellProps:{defaultValue:null,description:"",name:"muiTableHeadCellProps",required:!1,type:{name:"TableCellProps | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; column: MRT_Column<...>; }) => TableCellProps)"}},muiTableHeadProps:{defaultValue:null,description:"",name:"muiTableHeadProps",required:!1,type:{name:'TableHeadProps<"thead", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => TableHeadProps<...>)'}},muiTableHeadRowProps:{defaultValue:null,description:"",name:"muiTableHeadRowProps",required:!1,type:{name:'TableRowProps<"tr", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; headerGroup: { ...; }; }) => TableRowProps<...>)'}},muiTablePaginationProps:{defaultValue:null,description:"",name:"muiTablePaginationProps",required:!1,type:{name:'Partial<Omit<TablePaginationProps<JSXElementConstructor<TablePaginationBaseProps>, {}>, "rowsPerPage">> | ((props: { ...; }) => Partial<...>)'}},muiTablePaperProps:{defaultValue:null,description:"",name:"muiTablePaperProps",required:!1,type:{name:'PaperProps<"div", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => PaperProps<...>)'}},muiTableProps:{defaultValue:null,description:"",name:"muiTableProps",required:!1,type:{name:'TableProps<"table", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => TableProps<...>)'}},muiToolbarAlertBannerChipProps:{defaultValue:null,description:"",name:"muiToolbarAlertBannerChipProps",required:!1,type:{name:'ChipProps<"div", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ChipProps<...>)'}},muiToolbarAlertBannerProps:{defaultValue:null,description:"",name:"muiToolbarAlertBannerProps",required:!1,type:{name:"AlertProps | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => AlertProps)"}},muiTopToolbarProps:{defaultValue:null,description:"",name:"muiTopToolbarProps",required:!1,type:{name:'ToolbarProps<"div", {}> | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ToolbarProps<...>)'}},onDensityChange:{defaultValue:null,description:"",name:"onDensityChange",required:!1,type:{name:"OnChangeFn<MRT_DensityState>"}},onDraggingColumnChange:{defaultValue:null,description:"",name:"onDraggingColumnChange",required:!1,type:{name:"OnChangeFn<MRT_Column<{}>>"}},onDraggingRowChange:{defaultValue:null,description:"",name:"onDraggingRowChange",required:!1,type:{name:"OnChangeFn<{ id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; index: number; original: {}; parentId?: string; ... 32 more ...; _valuesCache: Record<...>; }>"}},onEditingCellChange:{defaultValue:null,description:"",name:"onEditingCellChange",required:!1,type:{name:"OnChangeFn<{ id: string; getIsGrouped: () => boolean; getValue: Getter<unknown>; renderValue: Getter<unknown>; getContext: () => CellContext<{}, unknown>; getIsPlaceholder: () => boolean; getIsAggregated: () => boolean; column: MRT_Column<...>; row: { ...; }; }>"}},onEditingRowCancel:{defaultValue:null,description:"",name:"onEditingRowCancel",required:!1,type:{name:"(props: { row: { id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; index: number; original: {}; ... 33 more ...; _valuesCache: Record<...>; }; table: { ...; }; }) => void"}},onEditingRowSave:{defaultValue:null,description:"",name:"onEditingRowSave",required:!1,type:{name:"(props: { exitEditingMode: () => void; row: { id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; ... 35 more ...; _valuesCache: Record<...>; }; table: { ...; }; values: Record<...>; }) => void | Promise<...>"}},onEditingRowChange:{defaultValue:null,description:"",name:"onEditingRowChange",required:!1,type:{name:"OnChangeFn<{ id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; index: number; original: {}; parentId?: string; ... 32 more ...; _valuesCache: Record<...>; }>"}},onColumnFilterFnsChange:{defaultValue:null,description:"",name:"onColumnFilterFnsChange",required:!1,type:{name:"OnChangeFn<{ [key: string]: MRT_FilterOption; }>"}},onGlobalFilterFnChange:{defaultValue:null,description:"",name:"onGlobalFilterFnChange",required:!1,type:{name:"OnChangeFn<MRT_FilterOption>"}},onHoveredColumnChange:{defaultValue:null,description:"",name:"onHoveredColumnChange",required:!1,type:{name:"OnChangeFn<MRT_Column<{}>>"}},onHoveredRowChange:{defaultValue:null,description:"",name:"onHoveredRowChange",required:!1,type:{name:"OnChangeFn<{ id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; index: number; original: {}; parentId?: string; ... 32 more ...; _valuesCache: Record<...>; }>"}},onIsFullScreenChange:{defaultValue:null,description:"",name:"onIsFullScreenChange",required:!1,type:{name:"OnChangeFn<boolean>"}},onShowAlertBannerChange:{defaultValue:null,description:"",name:"onShowAlertBannerChange",required:!1,type:{name:"OnChangeFn<boolean>"}},onShowColumnFiltersChange:{defaultValue:null,description:"",name:"onShowColumnFiltersChange",required:!1,type:{name:"OnChangeFn<boolean>"}},onShowGlobalFilterChange:{defaultValue:null,description:"",name:"onShowGlobalFilterChange",required:!1,type:{name:"OnChangeFn<boolean>"}},onShowToolbarDropZoneChange:{defaultValue:null,description:"",name:"onShowToolbarDropZoneChange",required:!1,type:{name:"OnChangeFn<boolean>"}},positionActionsColumn:{defaultValue:null,description:"",name:"positionActionsColumn",required:!1,type:{name:'"first" | "last"'}},positionExpandColumn:{defaultValue:null,description:"",name:"positionExpandColumn",required:!1,type:{name:'"first" | "last"'}},positionGlobalFilter:{defaultValue:null,description:"",name:"positionGlobalFilter",required:!1,type:{name:'"left" | "right" | "none"'}},positionPagination:{defaultValue:null,description:"",name:"positionPagination",required:!1,type:{name:'"bottom" | "top" | "none" | "both"'}},positionToolbarAlertBanner:{defaultValue:null,description:"",name:"positionToolbarAlertBanner",required:!1,type:{name:'"bottom" | "top" | "none"'}},positionToolbarDropZone:{defaultValue:null,description:"",name:"positionToolbarDropZone",required:!1,type:{name:'"bottom" | "top" | "none" | "both"'}},renderBottomToolbar:{defaultValue:null,description:"",name:"renderBottomToolbar",required:!1,type:{name:"ReactNode | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ReactNode)"}},renderBottomToolbarCustomActions:{defaultValue:null,description:"",name:"renderBottomToolbarCustomActions",required:!1,type:{name:"(props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; getSortedRowModel: () => RowModel<...>; ... 141 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ReactNode"}},renderColumnActionsMenuItems:{defaultValue:null,description:"",name:"renderColumnActionsMenuItems",required:!1,type:{name:"(props: { column: MRT_Column<{}>; closeMenu: () => void; table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<...>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ReactNode[]"}},renderColumnFilterModeMenuItems:{defaultValue:null,description:"",name:"renderColumnFilterModeMenuItems",required:!1,type:{name:"(props: { column: MRT_Column<{}>; internalFilterOptions: MRT_InternalFilterOption[]; onSelectFilterMode: (filterMode: MRT_FilterOption) => void; table: { ...; }; }) => ReactNode[]"}},renderDetailPanel:{defaultValue:null,description:"",name:"renderDetailPanel",required:!1,type:{name:"(props: { row: { id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; index: number; original: {}; ... 33 more ...; _valuesCache: Record<...>; }; table: { ...; }; }) => ReactNode"}},renderGlobalFilterModeMenuItems:{defaultValue:null,description:"",name:"renderGlobalFilterModeMenuItems",required:!1,type:{name:"(props: { internalFilterOptions: MRT_InternalFilterOption[]; onSelectFilterMode: (filterMode: MRT_FilterOption) => void; table: { reset: () => void; ... 145 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ReactNode[]"}},renderEmptyRowsFallback:{defaultValue:null,description:"",name:"renderEmptyRowsFallback",required:!1,type:{name:"(props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; getSortedRowModel: () => RowModel<...>; ... 141 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ReactNode"}},renderRowActionMenuItems:{defaultValue:null,description:"",name:"renderRowActionMenuItems",required:!1,type:{name:"(props: { closeMenu: () => void; row: { id: string; getUniqueValues: <TValue>(columnId: string) => TValue[]; getGroupingValue: (columnId: string) => unknown; depth: number; getIsGrouped: () => boolean; index: number; ... 34 more ...; _valuesCache: Record<...>; }; table: { ...; }; }) => ReactNode[]"}},renderRowActions:{defaultValue:null,description:"",name:"renderRowActions",required:!1,type:{name:"(props: { cell: { id: string; getIsGrouped: () => boolean; getValue: Getter<unknown>; renderValue: Getter<unknown>; getContext: () => CellContext<{}, unknown>; getIsPlaceholder: () => boolean; getIsAggregated: () => boolean; column: MRT_Column<...>; row: { ...; }; }; row: { ...; }; table: { ...; }; }) => ReactNode"}},renderToolbarInternalActions:{defaultValue:null,description:"",name:"renderToolbarInternalActions",required:!1,type:{name:"(props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; getSortedRowModel: () => RowModel<...>; ... 141 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ReactNode"}},renderTopToolbar:{defaultValue:null,description:"",name:"renderTopToolbar",required:!1,type:{name:"ReactNode | ((props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; ... 142 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ReactNode)"}},renderTopToolbarCustomActions:{defaultValue:null,description:"",name:"renderTopToolbarCustomActions",required:!1,type:{name:"(props: { table: { reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; getSortedRowModel: () => RowModel<...>; ... 141 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => ReactNode"}},rowCount:{defaultValue:null,description:"",name:"rowCount",required:!1,type:{name:"number"}},rowNumberMode:{defaultValue:null,description:"",name:"rowNumberMode",required:!1,type:{name:'"static" | "original"'}},selectAllMode:{defaultValue:null,description:"",name:"selectAllMode",required:!1,type:{name:'"all" | "page"'}},state:{defaultValue:null,description:"Manage state externally any way you want, then pass it back into MRT.",name:"state",required:!1,type:{name:"Partial<{ columnVisibility: VisibilityState; columnOrder: ColumnOrderState; columnPinning: ColumnPinningState; columnFilters: ColumnFiltersState; ... 24 more ...; showToolbarDropZone: boolean; }>"}},tableFeatures:{defaultValue:null,description:"Sequence of features important any dependent feature must be defined first",name:"tableFeatures",required:!1,type:{name:"MRT_CreateTableFeature<{}, any>[]"}},tableInstanceRef:{defaultValue:null,description:"Get access to the table instance via a ref to read state or call built-in methods",name:"tableInstanceRef",required:!1,type:{name:"MutableRefObject<{ reset: () => void; initialState: TableState; getCoreRowModel: () => RowModel<{}>; getFilteredRowModel: () => RowModel<{}>; getSortedRowModel: () => RowModel<{}>; ... 141 more ...; setShowToolbarDropZone: Dispatch<...>; }>"}},virtualizerInstanceRef:{defaultValue:null,description:"@deprecated Use `rowVirtualizerInstanceRef` instead",name:"virtualizerInstanceRef",required:!1,type:{name:"any"}},virtualizerProps:{defaultValue:null,description:"@deprecated Use `rowVirtualizerProps` instead",name:"virtualizerProps",required:!1,type:{name:"any"}},columnVirtualizerInstanceRef:{defaultValue:null,description:"",name:"columnVirtualizerInstanceRef",required:!1,type:{name:"MutableRefObject<Virtualizer<HTMLDivElement, HTMLTableCellElement>>"}},columnVirtualizerProps:{defaultValue:null,description:"",name:"columnVirtualizerProps",required:!1,type:{name:"Partial<VirtualizerOptions<HTMLDivElement, HTMLTableCellElement>> | ((props: { table: { reset: () => void; initialState: TableState; ... 144 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => Partial<...>)"}},rowVirtualizerInstanceRef:{defaultValue:null,description:"",name:"rowVirtualizerInstanceRef",required:!1,type:{name:"MutableRefObject<Virtualizer<HTMLDivElement, HTMLTableRowElement>>"}},rowVirtualizerProps:{defaultValue:null,description:"",name:"rowVirtualizerProps",required:!1,type:{name:"Partial<VirtualizerOptions<HTMLDivElement, HTMLTableRowElement>> | ((props: { table: { reset: () => void; initialState: TableState; ... 144 more ...; setShowToolbarDropZone: Dispatch<...>; }; }) => Partial<...>)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/BasicTable/BasicTable.tsx#BasicTable"]={docgenInfo:BasicTable.__docgenInfo,name:"BasicTable",path:"src/components/BasicTable/BasicTable.tsx#BasicTable"})}catch(__react_docgen_typescript_loader_error){}var BasicTable_stories={title:"Data/Basic table",component:BasicTable_BasicTable,tags:["autodocs"],argTypes:{columns:{description:"The columns to display in the table. accessorKeys or accessorFns must match keys in the data prop. See more info on creating columns on the official docs site"},data:{description:"Pass your data as an array of objects. Objects can theoretically be any shape, but it's best to keep them consistent. See the usage guide for more info on creating columns and data"}},parameters:{docs:{description:{component:"We are using [material-react-table library](https://www.material-react-table.com/), you can find more information about the props in the [documentation](https://www.material-react-table.com/docs/props)."}}}},DefaultBasicTable={args:{columns:[{accessorKey:"name.firstName",header:"First Name"},{accessorKey:"name.lastName",header:"Last Name"},{accessorKey:"address",header:"Address"},{accessorKey:"city",header:"City"},{accessorKey:"state",header:"State"}],data:[{name:{firstName:"John",lastName:"Doe"},address:"261 Erdman Ford",city:"East Daphne",state:"Kentucky"},{name:{firstName:"Jane",lastName:"Doe"},address:"769 Dominic Grove",city:"Columbus",state:"Ohio"},{name:{firstName:"Joe",lastName:"Doe"},address:"566 Brakus Inlet",city:"South Linda",state:"West Virginia"},{name:{firstName:"Kevin",lastName:"Vandy"},address:"722 Emie Stream",city:"Lincoln",state:"Nebraska"},{name:{firstName:"Joshua",lastName:"Rolluffs"},address:"32188 Larkin Turnpike",city:"Omaha",state:"Nebraska"}]},render:function render(args){return(0,jsx_runtime.jsx)(BasicTable_BasicTable,(0,objectSpread2.Z)({},args))}};DefaultBasicTable.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},DefaultBasicTable.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_DefaultBasicTable$pa=DefaultBasicTable.parameters)||void 0===_DefaultBasicTable$pa?void 0:_DefaultBasicTable$pa.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {\n    columns,\n    data\n  },\n  render: args => <BasicTable {...args} />\n}"},null===(_DefaultBasicTable$pa2=DefaultBasicTable.parameters)||void 0===_DefaultBasicTable$pa2||null===(_DefaultBasicTable$pa3=_DefaultBasicTable$pa2.docs)||void 0===_DefaultBasicTable$pa3?void 0:_DefaultBasicTable$pa3.source)})});var __namedExportsOrder=["DefaultBasicTable"]}}]);